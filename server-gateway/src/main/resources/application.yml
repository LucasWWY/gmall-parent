server:
  port: 80 # 监听80，web访问默认端口

spring:
  cloud:
    gateway:
      routes:
        #后台管理系统，请求url：http://api.gmall.com/admin/product/**
        - id: item_route
          uri: lb://service-item # 路由转发地址，转给哪个微服务（逻辑名称） lb: load balance
          predicates:
            - Path=/admin/item/**

        - id: product_route # 路由id
          uri: lb://service-product # 路由转发地址，转给哪个微服务（逻辑名称） lb: load balance
          predicates: # 断言
            - Path=/admin/product/**

        - id: user_route
          uri: lb://service-user # 路由转发地址，转给哪个微服务（逻辑名称） lb: load balance
          predicates:
            - Path=/api/user/** #只要请求URL的路径部分包含 /api/user/ 就会匹配

        #客户端，请求url：http://gmall.com/ 因为有先后匹配顺序 + 精确匹配，所以要放在后面
        - id: weball_route
          uri: lb://web-all # 路由转发地址，转给哪个微服务（逻辑名称） lb: load balance
          predicates: # 断言
            - Host=gmall.com, **.gmall.com #域名匹配

      globalcors:
        cors-configurations:
          '[/**]': #所有请求
            allowedOrigins: "*" #允许所有来源
            allowedMethods: "*" #允许所有方式 GET POST DELETE ....
            allowedHeaders: "*"
            allowCredentials: true #跨域携带Cookie

app:
  auth:
    anyone-url:  #直接放行的路径
      - /img/**
      - /js/**
      - /css/**

    deny-url:  #所有人无论是谁，登录或没，都不能访问，因为这个是内部路径，仅供rpc调用
      - /api/inner/**

    authen-url: #需要认证才能访问的路径。也就是必须登录才能访问，没登录的打回登录页
      - /**/auth/**
      - /trade.html

    login-page: http://passport.gmall.com/login.html  #登录页地址


#spring:
#  zipkin:
#    base-url: http://192.168.241.188:9411
#    sender:
#      type: web # 使用http方式发送
#  # zipkin链路追踪需要sleuth采样
#  sleuth:
#    sampler:
#      rate: 100 # 采样率

# 每个microservice都有自己的application.yml文件
# 且都要配置spring.zipkin.baseUrl和spring.sleuth.sampler.rate，有点麻烦，可以配置到nacos
# 创建一个 shared config: zipkin.yml

